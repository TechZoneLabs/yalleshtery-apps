import 'package:equatable/equatable.dart';

import '../../../cart/domain/entities/cart.dart';

class OrderEntity extends Equatable {
  final String id,
      userId,
      clientId,
      orderCode,
      orderAddress,
      orderShippingNote,
      userStoreId,
      userStoreName,
      userStoreUrl,
      userStoreImage,
      countryId,
      cityId,
      supTotalPrice,
      deliveryPrice,
      systemOrderCommission,
      totalPrice,
      totalQuantity,
      totalCommision,
      totalSystemProductCommissions,
      status,
      isPaid,
      setFrom,
      dateAdded,
      addedBy,
      clientName,
      clientMobile,
      cityName,
      countProduct,
      ticket,
      discount;
  final List<CartProduct> items;

  const OrderEntity({
    required this.id,
    required this.userId,
    required this.clientId,
    required this.orderCode,
    required this.orderAddress,
    required this.orderShippingNote,
    required this.userStoreId,
    required this.userStoreName,
    required this.userStoreUrl,
    required this.userStoreImage,
    required this.countryId,
    required this.cityId,
    required this.supTotalPrice,
    required this.deliveryPrice,
    required this.systemOrderCommission,
    required this.totalPrice,
    required this.totalQuantity,
    required this.totalCommision,
    required this.totalSystemProductCommissions,
    required this.status,
    required this.isPaid,
    required this.setFrom,
    required this.dateAdded,
    required this.addedBy,
    required this.clientName,
    required this.clientMobile,
    required this.cityName,
    required this.countProduct,
    required this.ticket,
    required this.items,
    required this.discount,
  });
  @override
  List<Object?> get props => [
        id,
        userId,
        clientId,
        orderCode,
        orderAddress,
        orderShippingNote,
        userStoreId,
        userStoreName,
        userStoreUrl,
        userStoreImage,
        countryId,
        cityId,
        supTotalPrice,
        deliveryPrice,
        systemOrderCommission,
        totalPrice,
        totalQuantity,
        totalCommision,
        totalSystemProductCommissions,
        status,
        isPaid,
        setFrom,
        dateAdded,
        addedBy,
        clientName,
        clientMobile,
        cityName,
        countProduct,
        ticket,
        items,
        discount,
      ];
}
